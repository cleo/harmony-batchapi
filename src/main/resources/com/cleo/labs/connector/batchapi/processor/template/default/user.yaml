- ${if:!exists("authenticator",Host)}:
    type: nativeUser
    authenticator: ${Host}
    home:
      enabled: true
      dir:
        default: local/root/%username%/
      subfolders:
        default:
        - usage: download
          path: inbox\
        - usage: upload
          path: outbox\
      access: file
    accept:
      ftp:
        enabled: true
      sftp:
        enabled: true
      http:
        enabled: true
      security:
        requireIPFilter: false
        passwordRules:
          enforce: true
          minLength: 1
          cannotContainUserName: false
          minUpperChars: 0
          minLowerChars: 0
          minNumericChars: 0
          minSpecialChars: 0
          noRepetitionCount: 0
          requirePasswordResetBeforeFirstUse: true
          expiration:
            enabled: false
            expiresDays: 60
          lockout:
            enabled: false
            afterFailedAttempts: 5
            withinSeconds: 60
            lockoutMinutes: 15
- username: ${UserID}
  authenticator: ${Host}
  email: ${Email}
  ${if:HostNotes}:
    notes: ${HostNotes}
  home:
    dir:
      ${if:DefaultHomeDir.toLowerCase()=="yes"}:
        default: ${CustomHomeDir}
      ${if:DefaultHomeDir.toLowerCase()!="yes"}:
        override: ${CustomHomeDir}
    subfolders:
      default:
      - ${for other:OtherFolder.split(';')}:
          usage: other
          path: ${other}
  accept:
    password: ${Password}
    whitelist:
    - ${for ip:WhitelistIP.split(';')}:
        ipAddress: ${ip}
  actions:
    ${if:CreateCollectName && !CreateCollectName.match(/^na$/i)}:
      ${CreateCollectName}:
        action: ${CreateCollectName}
        commands:
        - ${for command:ActionCollect.split(/;\|/)}: ${command}
        schedule: ${Schedule_Collect=='polling'?'on file continuously':Schedule_Send}
    ${if:CreateReceiveName && !CreateReceiveName.match(/^na$/i)}:
      ${CreateReceiveName}:
        action: ${CreateReceiveName}
        commands:
        - ${for command:ActionReceive.split(/;\|/)}: ${command}
        schedule: ${Schedule_Receive=='polling'?'on file continuously':Schedule_Receive}
    ${for column action:action_([^_]+)_alias}:
      ${eval('action_'+action+'_alias')}:
        action: ${eval('action_'+action+'_alias')}
        commands:
        - ${for command:eval('action_'+action+'_commands').split(/;\|/)}: ${command}
        schedule: ${s=eval('action_'+action+'_schedule');s=='polling'?'on file continuously':s}