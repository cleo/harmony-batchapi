---
- connection: ${alias}
  type: as2
  enabled: "true"
  test: false
  localName: ${AS2From}
  partnerName: ${AS2To}
  cemCapable: "false"
  connect:
    url: ${url}
  accept:
    requireSecurePort: false
  outgoing:
    subject: ${Subject}
    encrypt: ${encrypted:boolean}
    encryptionAlgorithm: 3des
    keyAlgorithm: rsa
    sign: ${signed:boolean}
    signatureAlgorithm: rsa
    compress: false
    receipt:
      type: ${receipt_type}
      micAlgorithm: sha1
      sign: ${receipt_sign:boolean}
      forwardToEmail: false
    storage:
      outbox: ${outbox}
      sentbox: ${sentbox}
  incoming:
    requireEncryption: false
    requireSignature: false
    requireReceiptSignature: false
    storage:
      inbox: ${inbox}
      receivedbox: ${receivedbox}
      filename:
        useDefaultFilename: false
        overWrite: false
  actions:
    ${if:CreateSendName && !CreateSendName.match(/^na$/i)}:
      ${CreateSendName}:
        action: ${CreateSendName}
        commands:
        - ${for command:ActionSend.split(/;\|/)}: ${command}
        schedule: ${Schedule_Send=='polling'?'on file continuously':Schedule_Send}
    ${if:CreateReceiveName && !CreateReceiveName.match(/^na$/i)}:
      ${CreateReceiveName}:
        action: ${CreateReceiveName}
        commands:
        - ${for command:ActionReceive.split(/;\|/)}: ${command}
        schedule: ${Schedule_Receive=='polling'?'on file continuously':Schedule_Receive}
    ${for column action:action_([^_]+)_alias}:
      ${eval('action_'+action+'_alias')}:
        action: ${eval('action_'+action+'_alias')}
        commands:
        - ${for command:eval('action_'+action+'_commands').split(/;\|/)}: ${command}
        schedule: ${s=eval('action_'+action+'_schedule');s=='polling'?'on file continuously':s}